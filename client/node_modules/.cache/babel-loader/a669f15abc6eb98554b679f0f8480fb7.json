{"ast":null,"code":"var _jsxFileName = \"/Users/nileshjaat/Desktop/ecom/src/components/sign-in/sign-in.component.jsx\";\nimport React, { Component, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from \"./sign-in.styles\";\nexport class SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(SignInContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SignInTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ButtonsBarContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \" Sign in \"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/nileshjaat/Desktop/ecom/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","handleSubmit","event","preventDefault","props","email","password","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from \"../../redux/user/user.actions\";\n\nimport {\n  SignInContainer,\n  SignInTitle,\n  ButtonsBarContainer,\n} from \"./sign-in.styles\";\n\nexport class SignIn extends Component {\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const { emailSignInStart } = this.props;\n    const { email, password } = this.state;\n\n    emailSignInStart(email, password);\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { googleSignInStart } = this.props;\n\n    return (\n      <SignInContainer>\n        <SignInTitle>I already have an account</SignInTitle>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            handleChange={this.handleChange}\n            value={this.state.email}\n            label=\"email\"\n            required\n          />\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            handleChange={this.handleChange}\n            label=\"password\"\n            required\n          />\n          <ButtonsBarContainer>\n            <CustomButton type=\"submit\"> Sign in </CustomButton>\n            <CustomButton\n              type=\"button\"\n              onClick={googleSignInStart}\n              isGoogleSignIn\n            >\n              Sign in with Google\n            </CustomButton>\n          </ButtonsBarContainer>\n        </form>\n      </SignInContainer>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}